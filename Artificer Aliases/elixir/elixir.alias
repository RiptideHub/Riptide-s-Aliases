embed

<drac2>

Artificer, args, i, c, cc, intel, H, a1= character().levels.get("Artificer"), argparse(&ARGS&), '-i' in &ARGS&, combat(), "Experimental Elixir", intelligenceMod, f'{ctx.prefix}{ctx.alias} [fli|bol|hea|res|swi|tra|roll|create] [-t target] [-l #] [-i]', &ARGS&[0] if &ARGS& else ''

errM = f"\nActive Character: {name}\n`{ctx.prefix}{ctx.alias}`"

flight, bold, heal, res, swift, transform, target, thp, hp, valid, slot = "fli" in a1, "bol" in a1, "hea" in a1, "res" in a1, "swi" in a1, "tra" in a1, args.last("t"), vroll(f"2d6+{intel}"), vroll(f"2d4+{intel}"), character().cc_exists(cc) and character().cc(cc).value, args.last('l',1,int)

character().create_cc(cc, 0, f'{"3" if Artificer>14 else "2" if Artificer>5 else "1"}', "long", "bubble") if "create" in a1 else ''

T = c.get_combatant(target) if c and target else None

T.modify_hp(hp.total) if T and c and heal else ''

T.set_temp_hp(thp.total) if T and c and (flight or bold or heal or res or swift or transform) and Artificer>8 else ''

RE = "Bold" if bold else "Resilient" if res else "Swift" if swift else "Transformed" if transform else "Flight" if flight else "None"

T.add_effect(f'{RE}',f'{"-sb 1d4 -b 1d4" if bold else "-ac +1" if res else "-dur -1"}') if T and (bold or res or swift or transform or flight) else ''

'' if i else character().mod_cc(cc,-1) if valid and flight or bold or heal or res or swift or transform else ''

'' if i or valid else character().spellbook.use_slot(slot) if character().spellbook.get_slots(slot) and (flight or bold or heal or res or swift or transform) else ""

</drac2>

-title "<name> {{"creates their" if "create" in a1 else "pulls out a random" if "roll" in a1 else "uses their" if valid else "tries to use their"}} {{cc}}{{f' on {T.name}' if T else ""}}" {{'' if Artificer>2 and "Alc" in get('subclass','') else err(f'You do not have this ability.{errM}')}} 

-desc "{{("The user gains a flying speed of 10 feet for 10 minutes." if flight else "The user can roll a d4 and add the number rolled to every attack roll and saving throw they make for the next minute." if bold else "The user regains a number of hit points equal to 2d4 + your Intelligence modifier." if heal else "The user gains a +1 bonus to AC for 10 minutes." if res else "The user's walking speed increases by 10 feet for 1 hour." if swift else "The user's body is transformed as if by the alter self spell. The user determines the transformation caused by the spell, the effects of which last for 10 minutes." if transform else "CC Created" if "create" in a1 else f"How to use `!elixir`!\n`{H}`\n\n`!elixir create` creates the cc needed for {cc}. Use again when you gain higher levels in this class.") if valid or character().spellbook.get_slots(slot) or "create" in a1 else err(f'Out of {cc}s.{errM}\nRun `!elixir create` to create the necessary cc.')}}"

{{(f' -f "HP Gained (+{hp.total})|{hp}|inline"' if T and heal else f'-f "Healing|{hp}|inline"') if heal else ""}} 

{{(f'-f "THP Gained|{thp}|inline"' if T and (flight or bold or heal or res or swift or transform) and Artificer>8 else f'-f "THP|{thp}|inline"') if Artificer>8 and (flight or bold or heal or res or swift or transform) else ''}} 

{{f'-f "Effect|{T.get_effect(f"{RE}") if c and T and (valid or i) else "Not in Initiative/No Target"}|inline"' if bold or res or swift or transform or flight else ''}}

-f "{{cc if valid else "Spell Slots"}}{{" (-1)" if i or flight or bold or heal or res or swift or transform else ""}}|{{"Ignored" if i else character().cc_str(cc) if valid else character().spellbook.slots_str(slot)}}|inline"

<drac2>

out = []
sol_1 = ""
sol_2 = ""
sol_3 = ""
character().set_cvar_nx("elixir", dump_json([sol_1, sol_2, sol_3]))
sollist = load_json(get("elixir","[]"))

if (a1 != "roll"):
    sol_1 = sollist[0]
    sol_2 = sollist[1]
    sol_3 = sollist[2]
    Used = False
    x = 0
    for y in sollist:           
        if (heal):
            if (y == "Healing" and not Used):               
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""
        elif (swift):
            if (y == "Swiftness" and not Used):    
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""
        elif (res):
            if (y == "Resilience" and not Used):  
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""
        elif (bold):
            if (y == "Boldness" and not Used):   
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""
        elif (flight):
            if (y == "Flight" and not Used):   
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""
        elif (transform):
            if (y == "Transformation" and not Used): 
                Used = True
                if (x == 0):
                    sol_1 = ""
                elif (x == 1):
                    sol_2 = ""
                elif (x == 2):
                    sol_3 = ""    
        x = x+1     
    character().set_cvar("elixir", dump_json([sol_1, sol_2, sol_3]))
    sollist = load_json(get("elixir","[]"))     
          
if (Artificer >= 3):
    if (a1 == "roll"):
        sroll_1 = vroll("1d6")
        if (sroll_1.total == 1):
            sol_1 = "Healing"
        elif (sroll_1.total == 2):
            sol_1 = "Swiftness"
        elif (sroll_1.total == 3):
            sol_1 = "Resilience"
        elif (sroll_1.total == 4):
            sol_1 = "Boldness"
        elif (sroll_1.total == 5):
            sol_1 = "Flight"
        elif (sroll_1.total == 6):
            sol_1 = "Transformation"        
        out.append(f'-f "Random Elixir|{sroll_1}[{sol_1}]|inline"')
    else:        
        out.append(f'-f "Random Elixir|[{sollist[0]}]|inline"')
else:
    sol_1 = ""
    
if (Artificer >= 9):
    if (a1 == "roll"):
        sroll_2 = vroll("1d6")
        if (sroll_2.total == 1):
            sol_2 = "Healing"
        elif (sroll_2.total == 2):
            sol_2 = "Swiftness"
        elif (sroll_2.total == 3):
            sol_2 = "Resilience"
        elif (sroll_2.total == 4):
            sol_2 = "Boldness"
        elif (sroll_2.total == 5):
            sol_2 = "Flight"
        elif (sroll_2.total == 6):
            sol_2 = "Transformation"
        out.append(f'-f "Random Elixir|{sroll_2}[{sol_2}]|inline"')
    else:        
        out.append(f'-f "Random Elixir|[{sollist[1]}]|inline"')
else:
    sol_2 = ""
    
if (Artificer >= 15):
    if (a1 == "roll"):
        sroll_3 = vroll("1d6")
        if (sroll_3.total == 1):
            sol_3 = "Healing"
        elif (sroll_3.total == 2):
            sol_3 = "Swiftness"
        elif (sroll_3.total == 3):
            sol_3 = "Resilience"
        elif (sroll_3.total == 4):
            sol_3 = "Boldness"
        elif (sroll_3.total == 5):
            sol_3 = "Flight"
        elif (sroll_3.total == 6):
            sol_3 = "Transformation"
        out.append(f'-f "Random Elixir|{sroll_3}[{sol_3}]|inline"')  
    else:        
        out.append(f'-f "Random Elixir|[{sollist[2]}]|inline"')    
else:
    sol_3 = ""           
character().set_cvar("elixir", dump_json([sol_1, sol_2, sol_3]))
return " ".join(out)
</drac2>

-footer "{{f"{T}\n" if T and heal else ""}}{{H}} | Made by {ctx.author} with MisterNiuf" -color <color> -thumb <image>
